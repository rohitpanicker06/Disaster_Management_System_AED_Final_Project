/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.police;

import CivilResponse.Army.ArmyEmployee;
import CivilResponse.CivilResponseReport;
import CivilResponse.CivilResponseReportDirectory;
import CivilResponse.Police.PoliceEmployee;
import CivilResponse.Police.PoliceEmployeeDirectory;
import CivilResponse.Police.PoliceReportDirectory;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rbac.context.RbacApplicationContext;
import ui.LoginPanel;
import ui.MainJFrame;

/**
 *
 * @author gayatrisk
 */
public class PoliceActiveAssignmentsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ArmyActiveAssignmentsPanel
     */
//     OfficerAllocation offAddedHm;
    public PoliceActiveAssignmentsPanel() {
        initComponents();
        setOpaque(false);
        populateTable();
        populateOfficerTable();

    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        int w = getWidth(), h = getHeight();
        Color color1 = Color.RED;
        Color color2 = Color.BLACK;
        GradientPaint gp = new GradientPaint(0, 0, color1, w, h, color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, w, h);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitleOperationWorkspace = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReportjTable = new javax.swing.JTable();
        btnTakeAction = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblOfAllocation = new javax.swing.JLabel();
        lblReportId = new javax.swing.JLabel();
        txtReportId = new javax.swing.JTextField();
        txtDisasterEvent = new javax.swing.JTextField();
        lblDisasterEvent = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        OfficerTable = new javax.swing.JTable();
        lblAssignedOfficer = new javax.swing.JLabel();
        jComboBoxViewOfficers = new javax.swing.JComboBox<>();
        btnSaveAssignment = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        logoutLabel3 = new javax.swing.JLabel();

        jPanel1.setOpaque(false);

        lblTitleOperationWorkspace.setFont(new java.awt.Font("Segoe UI Variable", 1, 36)); // NOI18N
        lblTitleOperationWorkspace.setForeground(new java.awt.Color(255, 255, 255));
        lblTitleOperationWorkspace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleOperationWorkspace.setText("Operation Workspace ");
        lblTitleOperationWorkspace.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        ReportjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Report Id", "Disaster Event", "Diaster ID", "Level of Severity", "Level of Risk"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ReportjTable);

        btnTakeAction.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnTakeAction.setText("Take Action");
        btnTakeAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeActionActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblOfAllocation.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblOfAllocation.setForeground(new java.awt.Color(255, 255, 255));
        lblOfAllocation.setText("Officer Allocation");

        lblReportId.setBackground(new java.awt.Color(255, 255, 255));
        lblReportId.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblReportId.setForeground(new java.awt.Color(255, 255, 255));
        lblReportId.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblReportId.setText("Report ID:");

        txtReportId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReportIdActionPerformed(evt);
            }
        });

        lblDisasterEvent.setBackground(new java.awt.Color(255, 255, 255));
        lblDisasterEvent.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblDisasterEvent.setForeground(new java.awt.Color(255, 255, 255));
        lblDisasterEvent.setText("Disaster Event:");

        OfficerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Officer Id", "Officer Name", "Squad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(OfficerTable);

        lblAssignedOfficer.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblAssignedOfficer.setForeground(new java.awt.Color(255, 255, 255));
        lblAssignedOfficer.setText("Assigned Officers");

        btnSaveAssignment.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSaveAssignment.setText("Save");
        btnSaveAssignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAssignmentActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        logoutLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        logoutLabel3.setForeground(new java.awt.Color(255, 255, 255));
        logoutLabel3.setText("Logout");
        logoutLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logoutLabel3MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOfAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTitleOperationWorkspace, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(logoutLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTakeAction, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDisasterEvent)
                            .addComponent(lblReportId, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDisasterEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReportId, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblAssignedOfficer)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jComboBoxViewOfficers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSaveAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btnBack))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(logoutLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(266, 266, 266))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitleOperationWorkspace)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(btnTakeAction)
                .addGap(42, 42, 42)
                .addComponent(lblOfAllocation)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblReportId, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReportId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDisasterEvent)
                    .addComponent(txtDisasterEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(lblAssignedOfficer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxViewOfficers, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addGap(28, 28, 28))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtReportIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReportIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReportIdActionPerformed

    public ArrayList<ArmyEmployee> officersAdded = new ArrayList<>();


    private void btnSaveAssignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAssignmentActionPerformed

        try {
            // TODO add your handling code here:
        int selectedRowIndex = ReportjTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a report to take Action");
            return;
        } else if (jComboBoxViewOfficers.getItemCount() == 0){
            JOptionPane.showMessageDialog(this, "Please select one or more Officers");
            return;
        }

        String crReportID = (String) ReportjTable.getValueAt(selectedRowIndex, 0);
        CivilResponseReport cv = null;
        for (CivilResponseReport cr : CivilResponseReportDirectory.crReportList) {
            if (cr.getCrReportId().equals(crReportID)) {
                cv = cr;
                break;
            }
        }
        String msg = cv.getCrReportId();

        JOptionPane.showMessageDialog(this, "Task force assigned for Civil Response Report ID: " + msg);
        
        

        txtDisasterEvent.setText("");
        txtReportId.setText("");
        jComboBoxViewOfficers.removeAllItems();
        
        PoliceReportDirectory.crReport.remove(cv);
        populateTable();

        } catch (Exception e) {
        }
        


    }//GEN-LAST:event_btnSaveAssignmentActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        MainJFrame.mainPanel.removeAll();
        MainJFrame.mainPanel.add(new PoliceDashboardPanel());
        MainJFrame.mainPanel.repaint();
        MainJFrame.mainPanel.revalidate();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnTakeActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeActionActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = ReportjTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a report to take Action");
            return;
        }

        String crReportID = (String) ReportjTable.getValueAt(selectedRowIndex, 0);
        CivilResponseReport cv = null;
        for (CivilResponseReport cr : CivilResponseReportDirectory.crReportList) {
            if (cr.getCrReportId().equals(crReportID)) {
                cv = cr;
                break;
            }
        }
        txtReportId.setText(cv.getCrReportId());
        txtDisasterEvent.setText(cv.getCrDisaster().getDisasterEvent());

    }//GEN-LAST:event_btnTakeActionActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        try {
            int selectedRowIndex = OfficerTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Officer");
            return;
        }

        String OfficerID = (String) OfficerTable.getValueAt(selectedRowIndex, 0);

        int selectedRowIndexforReport = ReportjTable.getSelectedRow();

        String crReportID = (String) ReportjTable.getValueAt(selectedRowIndexforReport, 0);
        CivilResponseReport cv = null;
        for (CivilResponseReport cr : CivilResponseReportDirectory.crReportList) {
            if (cr.getCrReportId().equals(crReportID)) {
                cv = cr;
                break;
            }
        }

        PoliceEmployee policeEmp = null;
        for (PoliceEmployee police_Emp : PoliceEmployeeDirectory.policeEmpList) {
            if (police_Emp.getEmpId().equals(OfficerID)) {
                policeEmp = police_Emp;
            }
        }

        jComboBoxViewOfficers.addItem(policeEmp.getPerson().getName());
        policeEmp.getReportList().add(cv);

        } catch (Exception e) {
        }

        int selectedRowIndex = OfficerTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Officer");
            return;
        }

        String OfficerID = (String) OfficerTable.getValueAt(selectedRowIndex, 0);

        int selectedRowIndexforReport = ReportjTable.getSelectedRow();

        String crReportID = (String) ReportjTable.getValueAt(selectedRowIndexforReport, 0);
        CivilResponseReport cv = null;
        for (CivilResponseReport cr : CivilResponseReportDirectory.crReportList) {
            if (cr.getCrReportId().equals(crReportID)) {
                cv = cr;
                break;
            }
        }

        PoliceEmployee policeEmp = null;
        for (PoliceEmployee police_Emp : PoliceEmployeeDirectory.policeEmpList) {
            if (police_Emp.getEmpId().equals(OfficerID)) {
                policeEmp = police_Emp;
            }
        }

        jComboBoxViewOfficers.addItem(policeEmp.getPerson().getName());
        policeEmp.getReportList().add(cv);
    }//GEN-LAST:event_btnAddActionPerformed

    private void logoutLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabel3MousePressed
        // TODO add your handling code here:

        RbacApplicationContext rbacApplicationContext = RbacApplicationContext.getInstance();
        rbacApplicationContext.setRoleContext(null);
        rbacApplicationContext.setUser(null);
        JOptionPane.showMessageDialog(this, "Logged Out");
        MainJFrame.mainPanel.removeAll();
        MainJFrame.mainPanel.add(new LoginPanel());
        MainJFrame.mainPanel.repaint();
        MainJFrame.mainPanel.revalidate();
    }//GEN-LAST:event_logoutLabel3MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OfficerTable;
    private javax.swing.JTable ReportjTable;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSaveAssignment;
    private javax.swing.JButton btnTakeAction;
    private javax.swing.JComboBox<String> jComboBoxViewOfficers;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAssignedOfficer;
    private javax.swing.JLabel lblDisasterEvent;
    private javax.swing.JLabel lblOfAllocation;
    private javax.swing.JLabel lblReportId;
    private javax.swing.JLabel lblTitleOperationWorkspace;
    private javax.swing.JLabel logoutLabel3;
    private javax.swing.JTextField txtDisasterEvent;
    private javax.swing.JTextField txtReportId;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {

        DefaultTableModel model = (DefaultTableModel) ReportjTable.getModel();
        model.setRowCount(0);

        if (PoliceReportDirectory.crReport != null) {
            for (CivilResponseReport crReport : PoliceReportDirectory.crReport) {
                Object[] row = new Object[5];

                row[0] = crReport.getCrReportId();
                row[1] = crReport.getCrDisaster().getDisasterId();
                row[2] = crReport.getCrDisaster().getDisasterEvent();
                row[3] = crReport.getLvlOfSeverity();
                row[4] = crReport.getLvlOfRisk();

                model.addRow(row);

            }
        }
    }

    public void populateOfficerTable() {

        DefaultTableModel model = (DefaultTableModel) OfficerTable.getModel();
        model.setRowCount(0);

        if (PoliceEmployeeDirectory.policeEmpList != null) {
            for (PoliceEmployee policeEmp : PoliceEmployeeDirectory.policeEmpList) {
                Object[] row = new Object[3];

                row[0] = policeEmp.getEmpId();
                row[1] = policeEmp.getPerson().getName();
                row[2] = policeEmp.getSquad();

                model.addRow(row);

            }
        }

    }
}
